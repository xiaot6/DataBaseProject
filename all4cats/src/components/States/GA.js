import React, { Component } from "react";
import { Typography, Button, TextField, List, ListItem, ListItemText } from '@material-ui/core'
import ReactDOM from "react-dom";
import Plot from 'react-plotly.js';


export default class Prediction extends Component {
  constructor(props) {
    super(props);

    
    this.state = {
      time: ""
    };

  }

  predictThisState() {
    console.log("clicked search");
    if (this.state.stateForPredict == "CA") {
      this.setState({
        index : 0
      })
    } else if (this.state.stateForPredict == "TX") {
      this.setState({
        index : 1
      })
    }
 
    
  }

  onChangeSaveState(e) {
    const state = e.target.value;
        this.setState({
          stateForPredict: state
        });
  } 


  render() {
    return (
        <div>
          <h2>
            This is GA prediction.
          </h2>
        <div>
        <Plot
        data={[
          {
            x: ["2005-01-31","2005-02-01","2005-02-02","2005-02-03","2005-02-04","2005-02-05","2005-02-06","2005-02-07","2005-02-08","2005-02-09","2005-02-10","2005-02-11","2005-02-12","2005-02-13","2005-02-14","2005-02-15","2005-02-16","2005-02-17","2005-02-18","2005-02-19","2005-02-20","2005-02-21","2005-02-22","2005-02-23","2005-02-24","2005-02-25","2005-02-26","2005-02-27","2005-02-28","2005-03-01","2005-03-02","2005-03-03","2005-03-04","2005-03-05","2005-03-06","2005-03-07","2005-03-08","2005-03-09","2005-03-10","2005-03-11","2005-03-12","2005-03-13","2005-03-14","2005-03-15","2005-03-16","2005-03-17","2005-03-18","2005-03-19","2005-03-20","2005-03-21","2005-03-22","2005-03-23","2005-03-24","2005-03-25","2005-03-26","2005-03-27","2005-03-28","2005-03-29","2005-03-30","2005-03-31","2005-04-01","2005-04-02","2005-04-03","2005-04-04","2005-04-05","2005-04-06","2005-04-07","2005-04-08","2005-04-09","2005-04-10","2005-04-11","2005-04-12","2005-04-13","2005-04-14","2005-04-15","2005-04-16","2005-04-17","2005-04-18","2005-04-19","2005-04-20","2005-04-21","2005-04-22","2005-04-23","2005-04-24","2005-04-25","2005-04-26","2005-04-27","2005-04-28","2005-04-29","2005-04-30","2005-05-01","2005-05-02","2005-05-03","2005-05-04","2005-05-05","2005-05-06","2005-05-07","2005-05-08","2005-05-09","2005-05-10","2005-05-11","2005-05-12","2005-05-13","2005-05-14","2005-05-15","2005-05-16","2005-05-17","2005-05-18","2005-05-19","2005-05-20","2005-05-21","2005-05-22","2005-05-23","2005-05-24","2005-05-25","2005-05-26","2005-05-27","2005-05-28","2005-05-29","2005-05-30","2005-05-31","2005-06-01","2005-06-02","2005-06-03","2005-06-04","2005-06-05","2005-06-06","2005-06-07","2005-06-08","2005-06-09","2005-06-10","2005-06-11","2005-06-12","2005-06-13","2005-06-14","2005-06-15","2005-06-16","2005-06-17","2005-06-18","2005-06-19","2005-06-20","2005-06-21","2005-06-22","2005-06-23","2005-06-24","2005-06-25","2005-06-26","2005-06-27","2005-06-28","2005-06-29","2005-06-30","2005-07-01","2005-07-02","2005-07-03","2005-07-04","2005-07-05","2005-07-06","2005-07-07","2005-07-08","2005-07-09","2005-07-10","2005-07-11","2005-07-12","2005-07-13","2005-07-14","2005-07-15","2005-07-16","2005-07-17","2005-07-18","2005-07-19","2005-07-20","2005-07-21","2005-07-22","2005-07-23","2005-07-24","2005-07-25","2005-07-26","2005-07-27","2005-07-28","2005-07-29","2005-07-30","2005-07-31","2005-08-01","2005-08-02","2005-08-03","2005-08-04","2005-08-05","2005-08-06","2005-08-07","2005-08-08"],
            y: [160433, 160823, 161243, 161752, 162364, 163024, 163624, 164170, 164747, 165321, 165962, 166523, 167163, 167758, 168319, 168753, 169143, 169595, 170118, 170634, 171088, 171498, 171887, 172342, 172786, 173209, 173614, 173942, 174155, 174201, 174134, 174004, 173725, 173402, 173010, 172681, 172066, 171275, 170256, 169409, 168580, 167676, 166593, 165377, 164212, 162918, 161339, 159389, 157580, 155889, 154320, 152447, 150614, 148942, 147699, 146642, 145691, 144679, 143907, 143356, 142784, 142152, 141550, 141305, 141122, 140748, 139798, 138536, 136994, 135665, 134258, 133114, 131880, 130866, 129554, 128105, 126441, 124973, 123863, 123213, 122936, 122683, 122380, 121720, 121227, 120723, 120796, 120984, 121388, 121813, 122326, 122655, 122819, 123035, 123634, 124471, 125528, 126627, 127701, 128710, 129810, 131010, 132227, 133584, 135018, 136476, 137706, 138988, 140077, 141156, 142024, 142899, 143656, 144356, 145117, 145828, 146590, 147288, 148011, 148668, 149309, 149919, 150514, 151201, 152040, 152946, 153722, 154477, 155203, 155894, 156576, 157239, 158082, 158907, 159878, 160827, 161707, 162415, 163043, 163683, 164218, 164941, 165738, 166711, 167516, 168395, 169263, 170173, 171084, 172139, 173327, 174494, 175865, 177152, 178562, 179915, 181362, 182729, 183909, 185114, 186403, 187772, 189091, 190325, 191474, 192595, 193747, 194814, 195791, 196594, 197600, 198607, 199671, 200483, 201269, 202069, 202817, 203424, 203895, 204459, 205235, 206210, 207174, 208179, 209164, 210347, 211620, 213016, 214544, 216314],
            type: 'scatter',
            mode: 'lines+markers',
            marker: {color: 'red'},
          },
          {type: 'scatter', x: this.state.x, y: this.state.y},
        ]}
        layout={ {width: 500, height: 400, title: 'A GA Plot'} }
          />
  
        </div>
        <div>
        <form noValidate autoComplete="off" className="formStyle">
              {/* listening for title in value, once change call onChange function to temporarily hold the title, until submission */}
              <TextField id="outlined-basic" label="State" value={this.state.stateForPredict} onChange={this.onChangeSaveState} variant="outlined"/>
            </form>
            <Button onClick={this.predictThisState}>
                Predict the state
            </Button>
        </div>

      </div>
    )
  }
}
